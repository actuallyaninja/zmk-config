/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
	
    behaviors {
        altf4: alt_f4 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F4";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp LA(F4)>;
            mods = <(MOD_LALT)>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4*  |  5   |                         |  6   |  7    |  8    |  9   |   0   | BSPC  |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   |  DEL  |
// | SHIFT |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
// | CTRL  |  Z  |  X  |  C   |  V   |  B   |    -   |        |   =   |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ENTER |
			bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &altf4   &kp N5                      &kp N6 &kp N7    &kp N8    &kp N9  &kp N0   &kp BSPC
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                       &kp Y  &kp U     &kp I     &kp O   &kp P    &kp DEL
&kp LSHFT &kp A  &kp S  &kp D    &kp F    &kp G                       &kp H  &kp J     &kp K     &kp L   &kp SEMI &kp SQT
&kp LCTRL &kp Z  &kp X  &kp C    &kp V    &kp B  &kp MINUS  &kp EQUAL &kp N  &kp M     &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                        &kp LALT &kp LGUI &mo 1  &kp RET    &kp SPACE &mo 2  &kp RCTRL &kp ENTER
			>;
		};

		lower_layer {
// ----------------------------------------------------------------------------------------------------------------------------------------
// |  `  |  F1 |  F2 |  F3  |  F4  |  F5  |                                                |  F6   |  F7   |  F8   |  F9  |  F10  |  DEL  |
// |     |     |     |      |      |      |                                                |       |       |       |  F11 |  F12  |       |
// |     |     |     |      |      |  ~   |                                                |  \    |  -    |  =    |  (   |   )   |       |
// |     |     |     |      |      |  `   |  Vol-  |                           |  Vol+     |  |    |  _    |  +    |  {   |   }   |       |
//                   |      |      |      |        |                           |           |       |       |       |
			bindings = <
&kp GRAVE  &kp F1   &kp F2  &kp F3    &kp F4      &kp F5                                   &kp F6   &kp F7    &kp F8    &kp F9    &kp F10   &trans
&trans     &trans   &trans  &trans    &trans      &trans                                   &trans   &trans    &trans    &kp F11   &kp F12   &trans
&trans     &trans   &trans  &trans    &trans      &kp TILDE                                &kp BSLH &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &trans
&mo 3      &trans   &trans  &trans    &trans      &kp GRAVE   &kp C_VOL_DN   &kp C_VOL_UP  &kp PIPE &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC  &trans
                            &trans    &trans      &trans      &trans         &trans        &trans   &trans    &trans
			>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------------
// |   ~   |     |     |      |      |      |                         |      |       |       |      |       |       |
// |       |     |     |      |      |      |                         |      |       |       |      |       |       |
// |       |     |     |      |      |      |                         |      |   <-  |   ^   |  v   |  ->   |       |
// |       |     |     |      |      |      |        |        |       |      | Home  | PgUp  | PgDn |  End  |       |
//                     |      |      |      |        |        |       |      |       |       |
			bindings = <
&kp TILDE &trans &trans &trans  &trans  &trans                        &trans   &trans    &trans    &trans    &trans    &trans
&trans    &trans &trans &trans  &trans  &trans                        &trans   &trans    &trans    &trans    &trans    &trans
&trans    &trans &trans &trans  &trans  &trans                        &trans   &kp LEFT  &kp UP    &kp DOWN  &kp RIGHT &trans
&trans    &trans &trans &trans  &trans  &trans  &trans      &trans    &trans   &kp HOME  &kp PG_UP &kp PG_DN &kp END   &kp BSLH
                        &trans  &trans  &trans  &trans      &trans    &trans   &trans    &trans
			>;
		};

		bt_layer {
// ----------------------------------------------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                                                           |      |       |       |      |       |       |
// |OUT TOG|     |     |      |      |      |                                                           |      |       |       |      |       |       |
// |       |     |     |      |      |      |                                                           |      |       |       |      |       |       |
// |       |     |     |      |      |      |        |                                          |       |      |       |       |      |       |       |
//                     |      |      |      |        |                                          |       |      |       |       |
			bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                           &trans  &trans  &trans  &trans  &trans  &trans
&out OUT_TOG &trans        &trans        &trans        &trans        &trans                                 &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans        &trans        &trans                                 &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans        &trans        &trans         &trans      &trans      &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans        &trans        &trans         &kp C_MUTE  &kp C_MUTE  &trans  &trans  &trans
			>;
		};
	};
};
