/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&kscan0 {
    debounce-period = <8>; // trying debounce of 8 ms for kailh speed coppers :(
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                   &kp LGUI  &mo 2  &kp RET  &kp SPACE &mo 1 &kp RALT
                        >;
                };
                lower_layer {
// -------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      |     |     |     |     |  _  |   | LFT |  UP | DWN | RGT |     |      |
// |      |     |     |     |     |  -  |   |     |     |     |     |     |      |
//                    | BT  |     |     |   |     |     |     |
                        bindings = <
   &kp ESC    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5            &kp N6   &kp N7   &kp N8   &kp N9    &kp N0    &kp DEL
   &trans     &trans       &trans       &trans       &trans       &trans            &trans   &kp LEFT &kp UP   &kp DOWN  &kp RIGHT &trans
   &trans     &trans       &trans       &trans       &trans       &trans            &trans   &kp HOME &kp END  &kp PGUP  &kp PGDN  &trans
                                        &trans        &trans       &trans            &trans   &trans   &trans
                        >;
                };

                raise_layer {
// ------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL |
// |      |     |     |     |     |     |   |  +  |     |  {  |  }  | "|" |  `  |
// |      |     |     |     |     |     |   |  =  |  ~  |  [  |  ]  |  \  |     | // TODO: Fix this row when &mkp is committed
//                    |     |     |     |   | ENT |     | ALT |
                        bindings = <
   &kp ESC   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp DEL
   &trans    &trans    &trans  &trans    &trans    &kp UNDER   &kp PLUS  &trans    &kp LBRC        &kp RBRC &kp PIPE &kp GRAVE
   &trans    &trans    &trans  &trans    &trans    &kp MINUS   &kp EQUAL &kp TILDE &kp LBKT        &kp RBKT &kp BSLH &trans
                                   &mo 3  &trans &trans           &trans  &trans &trans
                        >;
                };

                bt_layer {
// ------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |     |
// |      |     |     |     |     |     |   |     |     |     |     |     |     |
// |      |     |     |     |     |     |   |     |     |     |     |     |     |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &trans  &trans  &trans  &trans  &trans  &trans
   &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &trans        &trans        &trans           &trans  &trans  &trans  &trans  &trans  &trans
   &trans        &trans        &trans        &trans        &trans        &trans           &trans  &trans  &trans  &trans  &trans  &trans
                                             &trans        &trans        &trans           &trans  &trans  &trans
                        >;
                };
        };
};