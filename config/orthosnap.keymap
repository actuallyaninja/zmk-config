/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/outputs.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>


&spi1 {
   compatible = "nordic,nrf-spim";
   status = "okay";
   mosi-pin = <6>;
   // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
   sck-pin = <5>;
   miso-pin = <7>;

   led_strip: ws2812@0 {
      compatible = "worldsemi,ws2812-spi";
      label = "WS2812";

      /* SPI */
      reg = <0>; /* ignored, but necessary for SPI bindings */
      spi-max-frequency = <4000000>;

      /* WS2812 */
      chain-length = <60>; /* arbitrary; change at will */
      spi-one-frame = <0x70>;
      spi-zero-frame = <0x40>;
   };
};


 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define BTLAYER 3

&kscan0 {
    debounce-period = <10>;
};

/ {
       keymap {
              compatible = "zmk,keymap";
 
              default_layer {
 //    -----------------------------------------------------------          -------------------------------------------------------------
 //    |  ESC    |   1    |   2     |   3     |   4     |   5    |          |   6     |   7     |   8     |   9      |   0     |  BSPC  |
 //    |  TAB    |   Q    |   W     |   E     |   R     |   T    |          |   Y     |   U     |   I     |   O      |   P     |  DEL   |
 //    |  \      |   A    |   S     |   D     |   F     |   G    |          |   H     |   J     |   K     |   L      |   ;     |   '    |
 //    |  SHIFT  |   Z    |   X     |   C     |   V     |   B    |          |   N     |   M     |   ,     |   .      |   /     |  SHIFT |
 //    |  CTRL   |  ALT   |  WIN    | LOWER   | RAISE   | SPACE  |          |  SPACE  | LOWER   |  LEFT   |  UP      |  DOWN   |  RIGHT |
                     bindings = <
       &kp ESC    &kp N1   &kp N2    &kp N3    &kp N4    &kp N5              &kp N6    &kp N7    &kp N8    &kp N9     &kp N0    &kp BSPC  &kp C_MUTE 
       &kp TAB    &kp Q    &kp W     &kp E     &kp R     &kp T               &kp Y     &kp U     &kp I     &kp O      &kp P     &kp DEL   &kp C_MUTE 
       &kp BSLH   &kp A    &kp S     &kp D     &kp F     &kp G               &kp H     &kp J     &kp K     &kp L      &kp SEMI  &kp SQT   &kp C_MUTE 
       &kp LSHFT  &kp Z    &kp X     &kp C     &kp V     &kp B               &kp N     &kp M     &kp COMMA &kp PERIOD &kp SLASH &kp RSHFT &kp C_MUTE
       &kp LCTRL  &kp LALT &kp LGUI  &mo 1     &mo 2     &kp ENTER           &kp SPACE &mo 1     &kp LEFT   &kp UP    &kp DOWN  &kp RIGHT &kp C_MUTE
                     >;
              };
              lower_layer {
 //    ---------------------------------------------------------             -----------------------------------------------------------
 //    |  `       |  F1     |  F2   |  F3     |  F4     |  F5  |             |  F6    |   F7    |   F8     |   F9    |   F10   |       |
 //    |          |         |       |         |         |      |             |        |         |          |   F11   |   F12   |       |
 //    |          |         |       |         |         |      |             |        |  LEFT   |   UP     |  DOWN   |  RIGHT  |       |
 //    |          |         |       |         |         |      |             |        |  HOME   |  PG UP   |  PG DN  |  END    | Enter |
 //    |          |         |       |         |         |      |             |        |         |  HOME    |  PG UP  |  PG DN  |  END  |
                     bindings = <
       &kp GRAVE   &kp F1   &kp F2   &kp F3    &kp F4    &kp F5              &kp F6    &kp F7    &kp F8     &kp F9    &kp F10   &trans    &trans
       &trans      &trans   &trans   &trans    &trans    &trans              &trans    &trans    &trans     &kp F11   &kp F12   &trans    &trans
       &trans      &trans   &trans   &trans    &trans    &trans              &trans    &kp LEFT  &kp UP     &kp DOWN  &kp RIGHT &trans    &trans
       &trans      &trans   &trans   &trans    &trans    &trans              &trans    &kp HOME  &kp PG_UP  &kp PG_DN &kp END   &kp ENTER &trans
       &mo 3       &trans   &trans   &trans    &trans    &trans              &trans    &trans    &kp HOME   &kp PG_UP &kp PG_DN &kp END   &kp C_MUTE
                     >;
              };
              raise_layer {
 //    -------------------------------------------------------------------------------                  --------------------------------------------------------------
 //    |   `      |  F1        |  F2            |  F3           |  F4        |  F5   |                  |  F6   |  F7     |   F8      |   F9      |  F10     |       |
 //    |          |            |                |               |            |       |                  |       |   _     |    +      |   {       |   }      |       |
 //    |          |  Sh(HOME)  |  Ct(Sh(Home))  |  Ct(Sh(End))  |  Sh(End)   |       |                  |       |   -     |    =      |   [       |   ]      |       |
 //    |          |            |                |               |            |       |                  |       |   _     |    +      |   {       |   }      |       |
 //    |BTLAYER   |            |                |               |            |       |                  |       |         |           |           |          |       |
                     bindings = <
       &kp GRAVE   &kp F1       &kp F2           &kp F3          &kp F4       &kp F5                     &kp F6  &kp F7    &kp F8     &kp F9       &kp F10    &trans &trans
       &trans      &trans       &trans           &trans          &trans       &trans                     &trans  &kp UNDER &kp PLUS   &kp LBRC     &kp RBRC   &trans &trans
       &trans      &kp LS(HOME) &kp LC(LS(HOME)) &kp LC(LS(END)) &kp LS(END)  &trans                     &trans  &kp MINUS &kp EQUAL  &kp LBKT     &kp RBKT   &trans &trans
       &trans      &trans       &trans           &trans          &trans       &trans                     &trans  &kp UNDER &kp PLUS   &kp LBRC     &kp RBRC   &trans &trans
       &mo 3       &trans       &trans           &trans          &trans       &trans                     &trans  &trans    &trans     &trans       &trans     &trans &kp C_MUTE
                     >;
              };
              BTLAYER_layer {
 //   -------------------------------------------------------------------------------------          ------------------------------------------------------------------------------------------
 //   |  BT CLR    | BT SEL0    | BT SEL1     | BT SEL2    | BT SEL3    |     BT SEL4     |          |                |               |               |               |                |      |
 //   | OUT TOG    | OUT USB    | OUT BLE     |            | Reset      |                 |          |                |               |               |               |                |      |
 //   |            |            |             |            |            |                 |          |     Eff+       |      HUI      |      SAI      |      BRI      |      SPI       |      |
 //   |            |            |             |            |            |   Bootloader    |          |     Eff-       |      HUD      |      SAD      |      BRD      |      SPD       |      |
 //   |            |            |             |            |            |   Ext Pow Tog   |          |  RGB Toggle    |               |               |               |                |      |
                     bindings = <
       &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                 &trans           &trans          &trans          &trans          &trans           &trans &trans
       &out OUT_TOG &out OUT_USB &out OUT_BLE  &trans       &reset       &trans                       &trans           &trans          &trans          &trans          &trans           &trans &trans
       &trans       &trans       &trans        &trans       &trans       &trans                       &rgb_ug RGB_EFF  &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI  &trans &trans
       &trans       &trans       &trans        &trans       &trans       &bootloader                  &rgb_ug RGB_EFR  &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD  &trans &trans
       &trans       &trans       &trans        &trans       &trans       &ext_power EP_TOG            &rgb_ug RGB_TOG  &trans          &trans          &trans          &trans           &trans &kp C_MUTE
                     >;
              };
       };
};
